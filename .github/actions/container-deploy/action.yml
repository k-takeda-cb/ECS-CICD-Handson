name: Container Deploy

description: ECSサービスを更新し、コンテナをデプロイします。

inputs:
  aws-id:
    required: true
    description: AWSアカウントID
  ecs-cluster:
    required: true
    description: ECSクラスター
  ecs-service:
    required: true
    description: ECSサービス
  task-definition:
    required: true
    description: タスク定義
  container-name:
    required: true
    description: コンテナ名
  container-image:
    required: true
    description: コンテナイメージ
  codedeploy-application:
    required: true
    description: CodeDeployアプリケーション
  codedeploy-deployment-group:
    required: true
    description: CodeDeployデプロイグループ

runs:
  using: composite
  steps:
    - name: タスク定義の取得
      run: |
        aws ecs describe-task-definition --task-definition "${TASK_DEFINITION}" \
        --query taskDefinition --output json > "${RUNNER_TEMP}/task-def.json"
      env:
        TASK_DEFINITION: ${{ inputs.task-definition }}
      shell: bash

    - name: タスク定義の修正
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      id: render
      with:
        task-definition: ${{ runner.temp }}/task-def.json
        container-name: ${{ inputs.container-name }}
        image: ${{ inputs.container-image }}

    - name: appspec.ymlの修正
      run: |
        sed -i  -e "s/PLACEHOLDER_AWS_ID/${AWS_ID}/g" \
                -e "s/PLACEHOLDER_TASK_DEFINITION/${TASK_DEFINITION}/g" \
                -e "s/PLACEHOLDER_CONTAINER_NAME/${CONTAINER_NAME}/g" \
                AWS/ecs/appspec.yml
        cat AWS/ecs/appspec.yml
      env:
        AWS_ID: ${{ inputs.aws-id }}
        TASK_DEFINITION: ${{ inputs.task-definition }}
        CONTAINER_NAME: ${{ inputs.container-name }}
      shell: bash

    - name: ECSサービスの更新
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        cluster: ${{ inputs.ecs-cluster }}
        service: ${{ inputs.ecs-service }}
        task-definition: ${{ steps.render.outputs.task-definition }}
        codedeploy-appspec: AWS/ecs/appspec.yml
        codedeploy-application: ${{ inputs.codedeploy-application }}
        codedeploy-deployment-group: ${{ inputs.codedeploy-deployment-group }}
